{"ast":null,"code":"import _defineProperty from \"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\"; // import \"./stylesheets/style.scss\";\n\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport AuthService from \"./components/auth/Authservice\";\nimport RoutesService from \"./RoutesService\";\nimport Home from \"./components/pages/Home\";\nimport HomeLogged from \"./components/pages/HomeLogged\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport CreateBid from \"./components/organisms/CreateBid\";\nimport CreateProduct from \"./components/organisms/CreateProduct\";\nimport ShowBid from \"./components/pages/ShowBid\";\nimport Navbar from \"./components/organisms/Navbar\";\nimport ShowMyProduct from \"./components/pages/ShowMyProduct\";\nimport ShowProduct from \"./components/pages/ShowProduct\";\nexport default class App extends Component {\n  constructor(props) {\n    super();\n\n    this.getUser = userObj => {\n      this.setState(_objectSpread({}, this.state, {\n        loggedInUser: userObj\n      }));\n    };\n\n    this.logout = () => {\n      console.log(\"logueao out\");\n      this.service.logout().then(() => {\n        this.setState(_objectSpread({}, this.state, {\n          loggedInUser: null\n        }));\n      });\n    };\n\n    this.start = () => {\n      return this.service.start();\n    };\n\n    this.fetchUser = () => {\n      return this.service.loggedin().then(response => {\n        this.setState(_objectSpread({}, this.state, {\n          loggedInUser: response,\n          products: []\n        }));\n        console.log(\"fetch/////\", this.state);\n      }).catch(error => {\n        this.setState(_objectSpread({}, this.state, {\n          loggedInUser: false\n        }));\n      });\n    };\n\n    this.getGeoLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log(position.coords);\n          this.setState(_objectSpread({}, this.state, {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }));\n        });\n      } else {\n        error => console.log(error);\n      }\n    };\n\n    this.state = {\n      loggedInUser: null,\n      bid: null,\n      product: null,\n      products: null\n    };\n    this.service = new AuthService();\n    this.router = new RoutesService();\n    this.fetchUser();\n    this.getProducts();\n  }\n\n  changeStateBid(newValue) {\n    // const { from, to, deadLine } = newValue;\n    // this.setState({\n    //   ...this.state,\n    //   bid: {\n    //     from: from,\n    //     to: to,\n    //     deadLine: deadLine\n    //   },\n    //   nobid: \"xxxxxxxx\"\n    // });\n    this.fetchUser();\n    console.log(newValue);\n    console.log(\"bid actualizada\", this.state);\n  }\n\n  getProduct(id) {\n    return this.router.getProduct(id).then(response => {\n      this.setState(_objectSpread({}, this.state, {\n        product: response\n      }));\n      console.log(\"vuelta de productid\", this.state);\n    }).catch(error => console.log(error));\n  }\n\n  buyProduct(id) {\n    return this.router.buyProduct(id).then(response => {\n      this.setState(_objectSpread({}, this.state, {\n        product: response\n      }));\n      console.log(\"vuelta de compra producto\", this.state);\n    });\n  }\n\n  getProducts() {\n    return this.router.getProducts().then(response => {\n      response.sort((a, b) => Math.random() - 0.5);\n      this.setState(_objectSpread({}, this.state, {\n        products: response\n      }));\n      console.log(\"carga productos en state app\", this.state);\n    });\n  }\n\n  shuffleProducts() {\n    const shuffled = [...this.props.products].sort((a, b) => Math.random() - 0.5);\n    this.setState(_objectSpread({}, this.state, {\n      products: shuffled\n    }));\n    console.log(\"logged props\", this.props);\n  }\n\n  render() {\n    return this.state.loggedInUser ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        console.log(\"antes de montar\", this.state);\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: () => this.logout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }), React.createElement(HomeLogged, {\n          user: this.state.loggedInUser,\n          productsFromApp: () => {\n            this.getProducts();\n          },\n          products: this.state.products,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create-bid\",\n      render: () => {\n        if (this.state.loggedInUser.bid) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(Navbar, {\n            fromApp: () => this.logout(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }), React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \"Ya tienes una subasta activa\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, \"Link al panel de control de tu mudanza\"));\n        } else {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(Navbar, {\n            fromApp: () => this.logout(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }), \"estas log\", React.createElement(CreateBid, {\n            fromApp: newValue => this.changeStateBid(newValue),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create-product\",\n      render: () => {\n        console.log(\"llama create product\", this.state.loggedInUser);\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: () => this.logout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), React.createElement(CreateProduct, {\n          fromApp: () => this.fetchUser(),\n          fromAppRefreshProducts: () => this.getProducts(),\n          bid: this.state.loggedInUser.bid ? this.state.loggedInUser.bid._id : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/your-bid\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: () => this.logout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }), React.createElement(ShowBid, {\n          fromApp: () => this.fetchUser(),\n          user: this.state.loggedInUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/product/:id\",\n      render: props => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: () => this.logout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }), React.createElement(ShowProduct, {\n          productFromApp: () => this.getProduct(props.match.params.id),\n          product: this.state.product,\n          fromApp: () => this.fetchUser(),\n          userId: this.state.loggedInUser._id,\n          buyFromApp: id => this.buyProduct(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-product/:id\",\n      render: props => {\n        let chosenProduct = props.match.params.id;\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: () => this.logout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }), React.createElement(ShowMyProduct, {\n          productId: chosenProduct,\n          fromApp: () => this.fetchUser(),\n          user: this.state.loggedInUser,\n          product: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }))) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: e => this.logout(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }), React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create-bid\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: e => this.logout(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Tienes que estar registrado para poder crear tu mudanza\"), React.createElement(Login, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(Signup, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }), React.createElement(GoogleAuth, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"http://localhost:3010/auth/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"Sign In with Google\"), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          href: \"http://localhost:3010/auth/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create-product\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          fromApp: e => this.logout(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, \"Tienes que estar registrado y tener una mudanza activa para poder crear cajas con productos\", \" \"), React.createElement(Login, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }), React.createElement(Signup, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }), React.createElement(GoogleAuth, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"http://localhost:3010/auth/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, \"Sign In with Google\"), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })));\n  } //   return (\n  //     <div>\n  //       <Switch>\n  //         <Route\n  //           exact\n  //           path=\"/\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <Home></Home>\n  //                 <Home></Home>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-bid\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 {/* <CreateBidForm></CreateBidForm> */}\n  //                 <CreateBid fromApp={newValue=>this.changeStateBid(newValue)}></CreateBid>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-product\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <CreateProduct></CreateProduct>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/your-bid\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <ShowBid></ShowBid>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <Login getUser={this.getUser}></Login>\n  //                   <Signup getUser={this.getUser}></Signup>\n  //                   <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                   <a href=\"http://localhost:3010/auth/google\">\n  //                     Sign In with Google\n  //                   </a>\n  //                   <Button variant=\"contained\" color=\"primary\"></Button>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/login\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <Redirect to=\"/home\" />\n  //                   <h1>Wellcome home</h1>\n  //                   <button onClick={this.logout}>Logout</button>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <div className=\"App\">\n  //                     <Login getUser={this.getUser}></Login>\n  //                     <Signup getUser={this.getUser}></Signup>\n  //                     <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                     <a href=\"http://localhost:3010/auth/google\">\n  //                       Sign In with Google\n  //                     </a>\n  //                     <Button variant=\"contained\" color=\"primary\">\n  //                       Hello World\n  //                     </Button>\n  //                   </div>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //       </Switch>\n  //     </div>\n  //   );\n  //   // if(this.state.loggedInUser) {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <Redirect to=\"/home\"/>\n  //   //     <h1>Wellcome home</h1>\n  //   //     <button onClick={this.logout}>Logout</button>\n  //   //   </React.Fragment>\n  //   //   )\n  //   // }\n  //   // else {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <div className=\"App\">\n  //   //       <Login getUser={this.getUser}></Login>\n  //   //       <Signup getUser={this.getUser}></Signup>\n  //   //       <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //   //       <a href=\"http://localhost:3010/auth/google\">Sign In with Google</a>\n  //   //       <Button variant=\"contained\" color=\"primary\">\n  //   //   Hello World\n  //   // </Button>\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   //     )\n  //   // }\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Login","Signup","GoogleAuth","AuthService","RoutesService","Home","HomeLogged","Button","CssBaseline","CreateBid","CreateProduct","ShowBid","Navbar","ShowMyProduct","ShowProduct","App","constructor","props","getUser","userObj","setState","state","loggedInUser","logout","console","log","service","then","start","fetchUser","loggedin","response","products","catch","error","getGeoLocation","navigator","geolocation","getCurrentPosition","position","coords","lat","latitude","lng","longitude","bid","product","router","getProducts","changeStateBid","newValue","getProduct","id","buyProduct","sort","a","b","Math","random","shuffleProducts","shuffled","render","_id","match","params","chosenProduct","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\n// import \"./stylesheets/style.scss\";\n\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport AuthService from \"./components/auth/Authservice\";\nimport RoutesService from \"./RoutesService\";\n\nimport Home from \"./components/pages/Home\";\nimport HomeLogged from \"./components/pages/HomeLogged\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport CreateBid from \"./components/organisms/CreateBid\";\nimport CreateProduct from \"./components/organisms/CreateProduct\";\nimport ShowBid from \"./components/pages/ShowBid\";\nimport Navbar from \"./components/organisms/Navbar\";\nimport ShowMyProduct from \"./components/pages/ShowMyProduct\";\nimport ShowProduct from \"./components/pages/ShowProduct\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loggedInUser: null,\n      bid: null,\n      product: null,\n      products: null\n    };\n    this.service = new AuthService();\n    this.router = new RoutesService();\n    this.fetchUser();\n    this.getProducts();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      ...this.state,\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    console.log(\"logueao out\")\n    this.service.logout().then(() => {\n      this.setState({\n        ...this.state,\n        loggedInUser: null\n      });\n    });\n  };\n  start =() => {\n    return this.service\n    .start()\n  }\n\n\n  fetchUser = () => {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          ...this.state,\n          loggedInUser: response,\n          products: []\n        });\n        console.log(\"fetch/////\", this.state);\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          loggedInUser: false\n        });\n      });\n  };\n  changeStateBid(newValue) {\n    // const { from, to, deadLine } = newValue;\n    // this.setState({\n    //   ...this.state,\n    //   bid: {\n    //     from: from,\n    //     to: to,\n    //     deadLine: deadLine\n    //   },\n    //   nobid: \"xxxxxxxx\"\n    // });\n    this.fetchUser();\n    console.log(newValue);\n    console.log(\"bid actualizada\", this.state);\n  }\n\n  getProduct(id) {\n    return this.router.getProduct(id)\n    .then(response=> {\n\n      this.setState({\n        ...this.state,\n        product: response,\n      })\n      console.log(\"vuelta de productid\", this.state)\n    })\n    .catch(error=> console.log(error))\n    \n  }\n  buyProduct(id) {\n    return this.router.buyProduct(id)\n    .then(response=> {\n      this.setState({\n        ...this.state,\n        product: response\n      })\n      console.log(\"vuelta de compra producto\", this.state)\n    })\n  }\n  getProducts() {\n    return this.router.getProducts()\n    .then(response=> {\n      response.sort((a, b) => Math.random() - 0.5);      \n      this.setState({\n        ...this.state,\n        products: response\n      })\n      console.log(\"carga productos en state app\", this.state)\n\n    }\n      )\n  }\n  shuffleProducts () {\n    const shuffled= [...this.props.products].sort((a, b) => Math.random() - 0.5);\n    this.setState({\n      ...this.state,\n      products: shuffled\n    })\n  console.log(\"logged props\", this.props)\n\n  }\n  getGeoLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n            position => {\n                console.log(position.coords);\n                this.setState(\n                   {\n                        ...this.state,\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    }\n                )\n            }\n        )\n    } else {\n        error => console.log(error)\n    }\n}\n  \n\n  \n\n\n  render() {\n    return this.state.loggedInUser ? (\n      \n      <React.Fragment>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              console.log(\"antes de montar\", this.state)\n              return (\n                <React.Fragment>\n                   <Navbar fromApp={()=>this.logout()}></Navbar>\n                  <HomeLogged user={this.state.loggedInUser}\n                   productsFromApp={()=>{this.getProducts()}}\n                    products={this.state.products}></HomeLogged>\n                </React.Fragment>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/create-bid\"\n            render={() => {\n              if (this.state.loggedInUser.bid) {\n                return (\n                  <React.Fragment>\n                    <Navbar fromApp={()=>this.logout()}></Navbar>\n                    <h1>Ya tienes una subasta activa</h1>\n                    <p>Link al panel de control de tu mudanza</p>\n                  </React.Fragment>\n                );\n              } else {\n                return (\n                  <React.Fragment>\n                    <Navbar fromApp={()=>this.logout()}></Navbar>\n                    estas log\n                    <CreateBid\n                      fromApp={newValue => this.changeStateBid(newValue)}\n                    ></CreateBid>\n                  </React.Fragment>\n                );\n              }\n            }}\n          />\n          <Route\n            exact\n            path=\"/create-product\"\n            render={() => {\n              console.log(\"llama create product\" , this.state.loggedInUser)\n          \n                return (\n                  <React.Fragment>\n                    <Navbar fromApp={()=>this.logout()}></Navbar>\n                    <CreateProduct \n                    fromApp={()=>this.fetchUser()}\n                    fromAppRefreshProducts={()=>this.getProducts()} \n                    bid={this.state.loggedInUser.bid? this.state.loggedInUser.bid._id : null}></CreateProduct>\n                  </React.Fragment>\n                ) \n            }}\n          />\n          <Route\n            exact\n            path=\"/your-bid\"\n            render={() => {\n              return (\n                <React.Fragment>\n                  <Navbar fromApp={()=>this.logout()}></Navbar>\n                  <ShowBid\n                    fromApp={() => this.fetchUser()}\n                    user={this.state.loggedInUser}\n                  ></ShowBid>\n                </React.Fragment>\n              );\n            }}\n          />\n   \n          <Route\n            path=\"/product/:id\"\n            render={(props) => {            \n              return (\n                <React.Fragment>\n                  <Navbar fromApp={()=>this.logout()}></Navbar>\n                 \n                  <ShowProduct \n                  productFromApp={()=>this.getProduct(props.match.params.id)} product={this.state.product}\n                  fromApp={() => this.fetchUser()} userId={this.state.loggedInUser._id} buyFromApp={(id)=>this.buyProduct(id)}>\n                  \n                  </ShowProduct>\n                </React.Fragment>\n              );\n            }}\n          />\n\n          <Route\n            path=\"/my-product/:id\"\n            render={(props) => {\n              let chosenProduct = props.match.params.id;\n              return (\n                <React.Fragment>\n                  <Navbar fromApp={()=>this.logout()}></Navbar>\n                 \n                  <ShowMyProduct productId={chosenProduct} fromApp={() => this.fetchUser()} user={this.state.loggedInUser} product={null}></ShowMyProduct>\n                </React.Fragment>\n              );\n            }}\n          />\n        </Switch>\n      </React.Fragment>\n    ) :\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    (\n      <React.Fragment>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <React.Fragment>\n                    <Navbar fromApp={(e)=>this.logout(e)}></Navbar>\n                  <Home></Home>\n                </React.Fragment>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/create-bid\"\n            render={() => {\n              return (\n                <React.Fragment>\n                  <Navbar fromApp={(e)=>this.logout(e)}></Navbar>\n                  <h1>\n                    Tienes que estar registrado para poder crear tu mudanza\n                  </h1>\n                  <Login getUser={this.getUser}></Login>\n                  <Signup getUser={this.getUser}></Signup>\n                  <GoogleAuth getUser={this.getUser}></GoogleAuth>\n                  <a href=\"http://localhost:3010/auth/google\">\n                    Sign In with Google\n                  </a>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href=\"http://localhost:3010/auth/google\"\n                  ></Button>\n                </React.Fragment>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/create-product\"\n            render={() => {\n              return (\n                <React.Fragment>\n                  <Navbar fromApp={(e)=>this.logout(e)}></Navbar>\n                  <h1>\n                    Tienes que estar registrado y tener una mudanza activa para\n                    poder crear cajas con productos{\" \"}\n                  </h1>\n                  <Login getUser={this.getUser}></Login>\n                  <Signup getUser={this.getUser}></Signup>\n                  <GoogleAuth getUser={this.getUser}></GoogleAuth>\n                  <a href=\"http://localhost:3010/auth/google\">\n                    Sign In with Google\n                  </a>\n                  <Button variant=\"contained\" color=\"primary\"></Button>\n                </React.Fragment>\n              );\n            }}\n          />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n\n  //   return (\n\n  //     <div>\n  //       <Switch>\n  //         <Route\n  //           exact\n  //           path=\"/\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <Home></Home>\n  //                 <Home></Home>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-bid\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 {/* <CreateBidForm></CreateBidForm> */}\n  //                 <CreateBid fromApp={newValue=>this.changeStateBid(newValue)}></CreateBid>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-product\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <CreateProduct></CreateProduct>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/your-bid\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <ShowBid></ShowBid>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <Login getUser={this.getUser}></Login>\n  //                   <Signup getUser={this.getUser}></Signup>\n  //                   <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                   <a href=\"http://localhost:3010/auth/google\">\n  //                     Sign In with Google\n  //                   </a>\n  //                   <Button variant=\"contained\" color=\"primary\"></Button>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/login\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <Redirect to=\"/home\" />\n  //                   <h1>Wellcome home</h1>\n  //                   <button onClick={this.logout}>Logout</button>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <div className=\"App\">\n  //                     <Login getUser={this.getUser}></Login>\n  //                     <Signup getUser={this.getUser}></Signup>\n  //                     <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                     <a href=\"http://localhost:3010/auth/google\">\n  //                       Sign In with Google\n  //                     </a>\n  //                     <Button variant=\"contained\" color=\"primary\">\n  //                       Hello World\n  //                     </Button>\n  //                   </div>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //       </Switch>\n  //     </div>\n  //   );\n\n  //   // if(this.state.loggedInUser) {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <Redirect to=\"/home\"/>\n  //   //     <h1>Wellcome home</h1>\n  //   //     <button onClick={this.logout}>Logout</button>\n  //   //   </React.Fragment>\n  //   //   )\n  //   // }\n  //   // else {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <div className=\"App\">\n  //   //       <Login getUser={this.getUser}></Login>\n  //   //       <Signup getUser={this.getUser}></Signup>\n  //   //       <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //   //       <a href=\"http://localhost:3010/auth/google\">Sign In with Google</a>\n  //   //       <Button variant=\"contained\" color=\"primary\">\n  //   //   Hello World\n  //   // </Button>\n\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   //     )\n\n  //   // }\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}