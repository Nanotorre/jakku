{"ast":null,"code":"import _defineProperty from \"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/src/components/organisms/CreateBid.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport Bidmapcontainer from \"../molecules/Bidmapcontainer\";\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport RoutesService from \"../../RoutesService\";\nimport LocationSearchInput from \"../atoms/LocationSearchInput\";\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom';\nimport ButtonAdd from '../atoms/ButtonAdd';\n\nclass CreateBid extends Component {\n  constructor(props) {\n    super();\n\n    this.transformDate = () => {\n      moment.lang('es');\n      const dateTransformed = moment(this.state.deadLine).format('LLLL');\n      console.log(dateTransformed);\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, dateTransformed);\n    };\n\n    this.componentDidMount = () => {\n      if (this.props.user.bid) {\n        this.setState(_objectSpread({}, this.state, {\n          isBid: true\n        }));\n      }\n    };\n\n    this.state = {\n      sent: false,\n      isBid: false\n    };\n    this.routes = new RoutesService();\n  }\n\n  updateFormData(e, field) {\n    let newState = _objectSpread({}, this.state);\n\n    newState[field] = e.target.value;\n    this.setState(newState);\n  }\n\n  sendState(e) {\n    e.preventDefault();\n    this.setState(_objectSpread({}, this.state, {\n      sent: true\n    }));\n    this.routes.createBid(this.state).then(() => {\n      this.props.fromApp(this.state); // this.props.history.push('/show-bid')\n    }).catch(e => console.log(e));\n  }\n\n  changeState(newValue) {\n    this.setState(_objectSpread({}, this.state, {\n      location: {\n        lat: newValue.lat,\n        lng: newValue.lng,\n        address: newValue.address\n      }\n    }));\n  }\n\n  render() {\n    if (this.state.isBid) {\n      return React.createElement(\"div\", {\n        className: \"create-bid-active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Ya tienes una subasta activa\"), React.createElement(ButtonAdd, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    } else {\n      if (!this.state.sent) {\n        return React.createElement(\"div\", {\n          className: \"create-bid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"create-bid-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"CREA TU MUDANZA\"), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"input-day\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"D\\xEDa de finalizaci\\xF3n\"), React.createElement(\"input\", {\n          type: \"date\",\n          class: \"datepicker\",\n          placeholder: \"Cuando quieres que se lo lleven\",\n          name: \"dia\",\n          id: \"input-day\",\n          onChange: e => this.updateFormData(e, \"deadLine\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"hora\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Hora de recogida\"), React.createElement(\"input\", {\n          type: \"time\",\n          placeholder: \"Hora de comienzo de recogida\",\n          name: \"hora\",\n          onChange: e => this.updateFormData(e, \"from\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"fin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Finalizaci\\xF3n de recogida\"), React.createElement(\"input\", {\n          type: \"time\",\n          placeholder: \"Hora de finalizaci\\xF3n de recogida\",\n          name: \"fin\",\n          onChange: e => this.updateFormData(e, \"to\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Lugar de recogida\"), React.createElement(LocationSearchInput, {\n          changeState: newValue => this.changeState(newValue),\n          value: this.state.value,\n          name: \"location\",\n          placeholder: \"Calle o barrio\",\n          onChange: e => this.updateFormData(e, \"location\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"send-form\",\n          onClick: e => this.sendState(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Listo para a\\xF1adir cajas\"))));\n      } else {\n        console.log();\n        return React.createElement(\"div\", {\n          className: \"create-bid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"created-bid-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Tu mudanza\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Finaliza el \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, this.transformDate())), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Los compradores ir\\xE1n a recogerlo de \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.state.from), \" a \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.state.to)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"en \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, this.state.location.address)), React.createElement(Bidmapcontainer, {\n          title: \"\",\n          bids: [this.props.user.bid],\n          centerBid: this.props.centerBid,\n          zoomMap: 18,\n          mapSize: this.props.mapSize,\n          centerMap: {\n            lat: this.props.user.bid.location.coordinates[1],\n            lng: this.props.user.bid.location.coordinates[0]\n          },\n          mapSize: [30, 300],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Ya puedes a\\xF1adir cajas a tu mudanza\"), React.createElement(NavLink, {\n          to: \"/create-product\",\n          className: \"add-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"A\\xF1adir caja\")));\n      }\n    }\n  }\n\n}\n\nexport default withRouter(CreateBid);","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/organisms/CreateBid.jsx"],"names":["React","Component","Redirect","NavLink","Bidmapcontainer","DateFnsUtils","TextField","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","RoutesService","LocationSearchInput","moment","withRouter","ButtonAdd","CreateBid","constructor","props","transformDate","lang","dateTransformed","state","deadLine","format","console","log","componentDidMount","user","bid","setState","isBid","sent","routes","updateFormData","e","field","newState","target","value","sendState","preventDefault","createBid","then","fromApp","catch","changeState","newValue","location","lat","lng","address","render","from","to","centerBid","mapSize","coordinates"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport Bidmapcontainer from \"../molecules/Bidmapcontainer\";\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport RoutesService from \"../../RoutesService\";\nimport LocationSearchInput from \"../atoms/LocationSearchInput\";\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom'\nimport ButtonAdd from '../atoms/ButtonAdd';\n\n\n\n\n\nclass CreateBid extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      sent: false,\n      isBid: false\n    }\n    this.routes = new RoutesService()\n  }\n  updateFormData(e,field){\n    let newState = {\n      ...this.state\n    };\n    newState[field] = e.target.value;\n\n    this.setState(newState);\n  }\n\n  sendState(e) {\n    e.preventDefault();\n    this.setState({\n      ...this.state,\n      sent: true\n    });\n    this.routes.createBid(this.state)\n    .then(() => {\n      \n      this.props.fromApp(this.state);\n      // this.props.history.push('/show-bid')\n    })\n    .catch(e => console.log(e))\n    \n  }\n  changeState(newValue) {\n    this.setState({\n      ...this.state,\n      location: {\n        lat: newValue.lat,\n        lng: newValue.lng,\n        address: newValue.address\n      }\n    });\n  }\n \n  transformDate = () => {\n    moment.lang('es');\n    const dateTransformed= moment(this.state.deadLine).format('LLLL')\n    console.log(dateTransformed)\n    return <p>{dateTransformed}</p>\n  }\n  componentDidMount=()=>{\n    if(this.props.user.bid) {\n      this.setState({\n        ...this.state,\n        isBid: true\n      })\n    }\n  }\n\n\n  render() {\n    if(this.state.isBid){\n      return(\n        <div className=\"create-bid-active\">\n        <h1>Ya tienes una subasta activa</h1>\n        <ButtonAdd></ButtonAdd>\n     \n      </div>\n      )\n    }\n    else \n    {\n\n      if(!this.state.sent) {\n        return (\n          <div className=\"create-bid\">\n          <div className=\"create-bid-container\">\n            <h1>CREA TU MUDANZA</h1>\n          <form>\n            <label  htmlFor=\"input-day\">Día de finalización</label>\n            <input type=\"date\" class=\"datepicker\" placeholder=\"Cuando quieres que se lo lleven\" name=\"dia\" id=\"input-day\" onChange={e => this.updateFormData(e, \"deadLine\")} ></input>\n            <label htmlFor=\"hora\">Hora de recogida</label>\n            <input type=\"time\" placeholder=\"Hora de comienzo de recogida\" name=\"hora\"  onChange={e => this.updateFormData(e, \"from\")} ></input>\n            <label htmlFor=\"fin\">Finalización de recogida</label>\n            <input type=\"time\" placeholder=\"Hora de finalización de recogida\" name=\"fin\"  onChange={e => this.updateFormData(e, \"to\")}></input>\n            <label htmlFor=\"location\">Lugar de recogida</label>\n            <LocationSearchInput changeState={newValue => this.changeState(newValue)}\n            value={this.state.value} name=\"location\" placeholder=\"Calle o barrio\" onChange={e => this.updateFormData(e, \"location\")}></LocationSearchInput>\n            <button  className=\"send-form\" onClick={e => this.sendState(e)}>Listo para añadir cajas</button>\n          </form>\n          </div>\n          </div>\n        )\n      }\n      else {\n        console.log()\n        return (\n          <div className=\"create-bid\">\n          <div className=\"created-bid-container\">\n            <h1>Tu mudanza</h1>\n             <p>Finaliza el <span>{this.transformDate()}</span></p>\n          <p>Los compradores irán a recogerlo de <span>{this.state.from}</span> a <span>{this.state.to}</span></p>\n          <p>en <span>{this.state.location.address}</span></p>\n          <Bidmapcontainer\n                  title={\"\"}\n                  bids={[this.props.user.bid]}\n                  centerBid={this.props.centerBid}\n                  zoomMap={18}\n                  mapSize={this.props.mapSize}\n                  centerMap={{\n                    lat: this.props.user.bid.location.coordinates[1],\n                    lng: this.props.user.bid.location.coordinates[0]\n                  }}\n                  mapSize={[30,300]}\n                ></Bidmapcontainer>\n          <p>Ya puedes añadir cajas a tu mudanza</p>\n          <NavLink to={`/create-product`} className=\"add-box\">Añadir caja</NavLink>\n          </div>  \n          </div>  \n        )\n      }\n    }\n    \n  }\n}\n\nexport default withRouter(CreateBid)"]},"metadata":{},"sourceType":"module"}