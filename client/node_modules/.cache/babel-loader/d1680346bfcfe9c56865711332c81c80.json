{"ast":null,"code":"import _classCallCheck from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Marker,InfoWindow}from\"react-google-maps\";import CardMap from\"../organisms/CardMap\";import Box from\"../../img/boxMapIcon.png\";var Bidmarker=/*#__PURE__*/function(_React$Component){_inherits(Bidmarker,_React$Component);function Bidmarker(props){var _this;_classCallCheck(this,Bidmarker);_this=_possibleConstructorReturn(this,_getPrototypeOf(Bidmarker).call(this,props));_this.toggleOpen=function(){console.log(\"inside bidmarker\",_this.state);_this.setState({isOpen:!_this.state.isOpen},function(){if(!_this.state.isOpen){_this.setState({activeMarker:false},function(){_this.props.closeMarkers(null);});}else{_this.props.closeMarkers(_this.props.id);}});};_this.state={isOpen:false,activeMarker:true};return _this;}_createClass(Bidmarker,[{key:\"render\",// render(){\n//   return(\n//       <Marker\n//         position={this.props.location}\n//         icon={Box}\n//         onClick={this.toggleOpen}\n//       >\n//       </Marker>\n//   );\n// }\nvalue:function render(){return React.createElement(Marker,{onClick:this.toggleOpen,position:this.props.location,icon:Box},this.state.isOpen&&this.state.activeMarker?React.createElement(InfoWindow,{maxWidth:800,defaultPosition:this.props.location,onCloseClick:this.props.onToggleOpen},React.createElement(CardMap,{toggleShowPage:this.props.toggleShowPage,bid:this.props.bid})):null);}}]);return Bidmarker;}(React.Component);export{Bidmarker as default};","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/atoms/Bidmarker.jsx"],"names":["React","Marker","InfoWindow","CardMap","Box","Bidmarker","props","toggleOpen","console","log","state","setState","isOpen","activeMarker","closeMarkers","id","location","onToggleOpen","toggleShowPage","bid","Component"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,mBAAnC,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAIA,MAAOC,CAAAA,GAAP,KAAgB,0BAAhB,C,GAEqBC,CAAAA,S,+EACnB,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GADiB,MAQnBC,UARmB,CAQN,UAAM,CACjBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgC,MAAKC,KAArC,EACA,MAAKC,QAAL,CAAc,CAACC,MAAM,CAAE,CAAC,MAAKF,KAAL,CAAWE,MAArB,CAAd,CAA4C,UAAK,CAC7C,GAAI,CAAC,MAAKF,KAAL,CAAWE,MAAhB,CAAuB,CACrB,MAAKD,QAAL,CAAc,CAACE,YAAY,CAAE,KAAf,CAAd,CAAqC,UAAM,CACzC,MAAKP,KAAL,CAAWQ,YAAX,CAAwB,IAAxB,EACD,CAFD,EAGD,CAJD,IAIM,CACJ,MAAKR,KAAL,CAAWQ,YAAX,CAAwB,MAAKR,KAAL,CAAWS,EAAnC,EACD,CACF,CARH,EAUD,CApBkB,CAEjB,MAAKL,KAAL,CAAa,CACXE,MAAM,CAAE,KADG,CAEXC,YAAY,CAAE,IAFH,CAAb,CAFiB,aAMlB,C,sCAgBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uBAEQ,CACN,MAEI,qBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKN,UAAtB,CACE,QAAQ,CAAE,KAAKD,KAAL,CAAWU,QADvB,CAEE,IAAI,CAAEZ,GAFR,EAIE,KAAKM,KAAL,CAAWE,MAAX,EAAqB,KAAKF,KAAL,CAAWG,YAAhC,CACA,oBAAC,UAAD,EAAY,QAAQ,CAAE,GAAtB,CAA2B,eAAe,CAAG,KAAKP,KAAL,CAAWU,QAAxD,CAAmE,YAAY,CAAE,KAAKV,KAAL,CAAWW,YAA5F,EACE,oBAAC,OAAD,EAAS,cAAc,CAAE,KAAKX,KAAL,CAAWY,cAApC,CAAoD,GAAG,CAAE,KAAKZ,KAAL,CAAWa,GAApE,EADF,CADA,CAGgB,IAPlB,CAFJ,CAeD,C,uBAlDoCnB,KAAK,CAACoB,S,SAAxBf,S","sourcesContent":["import React from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport CardMap from \"../organisms/CardMap\";\n\n\n\nimport Box from \"../../img/boxMapIcon.png\"\n\nexport default class Bidmarker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n      activeMarker: true\n    }\n  }\n\n  toggleOpen = () => {\n    console.log(\"inside bidmarker\", this.state)\n    this.setState({isOpen: !this.state.isOpen}, () =>{\n        if (!this.state.isOpen){\n          this.setState({activeMarker: false}, () => {\n            this.props.closeMarkers(null)\n          })\n        } else{\n          this.props.closeMarkers(this.props.id)\n        }\n      }\n    )\n  }\n\n  // render(){\n  //   return(\n  //       <Marker\n  //         position={this.props.location}\n  //         icon={Box}\n  //         onClick={this.toggleOpen}\n  //       >\n  //       </Marker>\n  //   );\n  // }\n\n  render(){\n    return(\n\n        <Marker onClick={this.toggleOpen}\n          position={this.props.location}\n          icon={Box}\n        >\n        { this.state.isOpen && this.state.activeMarker ?\n          <InfoWindow maxWidth={800} defaultPosition={ this.props.location } onCloseClick={this.props.onToggleOpen}>\n            <CardMap toggleShowPage={this.props.toggleShowPage} bid={this.props.bid}/>\n          </InfoWindow> : null\n        }\n        </Marker>\n    \n    )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}