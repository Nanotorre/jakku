{"ast":null,"code":"import _defineProperty from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from\"react\";import PlacesAutocomplete,{geocodeByAddress,getLatLng}from\"react-places-autocomplete\";var LocationSearchInput=/*#__PURE__*/function(_React$Component){_inherits(LocationSearchInput,_React$Component);function LocationSearchInput(props){var _this;_classCallCheck(this,LocationSearchInput);_this=_possibleConstructorReturn(this,_getPrototypeOf(LocationSearchInput).call(this,props));_this.handleChange=function(address){_this.setState(_objectSpread({},_this.state,{address:address}));};_this.handleSelect=function(address){geocodeByAddress(address).then(function(results){getLatLng(results[0]).then(function(googleLatLng){_this.setState(_objectSpread({},_this.state,{address:results[0].formatted_address,lat:googleLatLng.lat,lng:googleLatLng.lng}));_this.changeValue();});})// .then(latLng => console.log('Success', latLng))\n.catch(function(error){return console.error(\"Error\",error);});};_this.state={address:\"\",lat:null,lng:null};return _this;}_createClass(LocationSearchInput,[{key:\"changeValue\",value:function changeValue(){this.props.changeState(this.state);}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(PlacesAutocomplete,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect},function(_ref){var getInputProps=_ref.getInputProps,suggestions=_ref.suggestions,getSuggestionItemProps=_ref.getSuggestionItemProps,loading=_ref.loading;return React.createElement(\"div\",null,React.createElement(\"input\",getInputProps({placeholder:\"Search Places ...\",className:\"location-search-input\"})),React.createElement(\"div\",{className:\"autocomplete-dropdown-container\"},loading&&React.createElement(\"div\",null,\"Loading...\"),suggestions.map(function(suggestion){var className=suggestion.active?\"suggestion-item--active\":\"suggestion-item\";// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:\"#fafafa\",cursor:\"pointer\"}:{backgroundColor:\"#ffffff\",cursor:\"pointer\"};return React.createElement(\"div\",getSuggestionItemProps(suggestion,{className:className,style:style}),React.createElement(\"span\",null,suggestion.description));})));}));}}]);return LocationSearchInput;}(React.Component);export{LocationSearchInput as default};","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/atoms/LocationSearchInput.jsx"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","props","handleChange","address","setState","state","handleSelect","then","results","googleLatLng","formatted_address","lat","lng","changeValue","catch","error","console","changeState","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","Component"],"mappings":"w/CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,EACEC,gBADF,CAEEC,SAFF,KAGO,2BAHP,C,GAKqBC,CAAAA,mB,yFACnB,6BAAYC,KAAZ,CAAmB,qDACjB,qFAAMA,KAAN,GADiB,MASnBC,YATmB,CASJ,SAAAC,OAAO,CAAI,CACxB,MAAKC,QAAL,kBAAmB,MAAKC,KAAxB,EAA+BF,OAAO,CAAPA,OAA/B,IACD,CAXkB,OAanBG,YAbmB,CAaJ,SAAAH,OAAO,CAAI,CACxBL,gBAAgB,CAACK,OAAD,CAAhB,CACGI,IADH,CACQ,SAAAC,OAAO,CAAI,CACfT,SAAS,CAACS,OAAO,CAAC,CAAD,CAAR,CAAT,CAAsBD,IAAtB,CAA2B,SAAAE,YAAY,CAAI,CACzC,MAAKL,QAAL,kBACK,MAAKC,KADV,EAEEF,OAAO,CAAEK,OAAO,CAAC,CAAD,CAAP,CAAWE,iBAFtB,CAGEC,GAAG,CAAEF,YAAY,CAACE,GAHpB,CAIEC,GAAG,CAAEH,YAAY,CAACG,GAJpB,IAMA,MAAKC,WAAL,GACD,CARD,EASD,CAXH,CAYE;AAZF,CAaGC,KAbH,CAaS,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,CAAuBA,KAAvB,CAAJ,EAbd,EAcD,CA5BkB,CAEjB,MAAKV,KAAL,CAAa,CACXF,OAAO,CAAE,EADE,CAEXQ,GAAG,CAAE,IAFM,CAGXC,GAAG,CAAE,IAHM,CAAb,CAFiB,aAOlB,C,iFAsBa,CACZ,KAAKX,KAAL,CAAWgB,WAAX,CAAuB,KAAKZ,KAA5B,EACD,C,uCAEQ,CACP,MACE,gCAIE,oBAAC,kBAAD,EACE,KAAK,CAAE,KAAKA,KAAL,CAAWF,OADpB,CAEE,QAAQ,CAAE,KAAKD,YAFjB,CAGE,QAAQ,CAAE,KAAKI,YAHjB,EAKG,kBACCY,CAAAA,aADD,MACCA,aADD,CAECC,WAFD,MAECA,WAFD,CAGCC,sBAHD,MAGCA,sBAHD,CAICC,OAJD,MAICA,OAJD,OAMC,gCACE,4BACMH,aAAa,CAAC,CAChBI,WAAW,CAAE,mBADG,CAEhBC,SAAS,CAAE,uBAFK,CAAD,CADnB,CADF,CAOE,2BAAK,SAAS,CAAC,iCAAf,EACGF,OAAO,EAAI,4CADd,CAEGF,WAAW,CAACK,GAAZ,CAAgB,SAAAC,UAAU,CAAI,CAC7B,GAAMF,CAAAA,SAAS,CAAGE,UAAU,CAACC,MAAX,CACd,yBADc,CAEd,iBAFJ,CAGA;AACA,GAAMC,CAAAA,KAAK,CAAGF,UAAU,CAACC,MAAX,CACV,CAAEE,eAAe,CAAE,SAAnB,CAA8BC,MAAM,CAAE,SAAtC,CADU,CAEV,CAAED,eAAe,CAAE,SAAnB,CAA8BC,MAAM,CAAE,SAAtC,CAFJ,CAGA,MACE,2BACMT,sBAAsB,CAACK,UAAD,CAAa,CACrCF,SAAS,CAATA,SADqC,CAErCI,KAAK,CAALA,KAFqC,CAAb,CAD5B,CAME,gCAAOF,UAAU,CAACK,WAAlB,CANF,CADF,CAUD,CAlBA,CAFH,CAPF,CAND,EALH,CAJF,CADF,CAkDD,C,iCArF8ClC,KAAK,CAACmC,S,SAAlC/B,mB","sourcesContent":["import React from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      lat: null,\n      lng: null\n    };\n  }\n\n  handleChange = address => {\n    this.setState({ ...this.state, address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => {\n        getLatLng(results[0]).then(googleLatLng => {\n          this.setState({\n            ...this.state,\n            address: results[0].formatted_address,\n            lat: googleLatLng.lat,\n            lng: googleLatLng.lng\n          });\n          this.changeValue()\n        });\n      })\n      // .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error(\"Error\", error));\n  };\n  changeValue() {\n    this.props.changeState(this.state)\n  };\n\n  render() {\n    return (\n      <div>\n        {/* xxxx{this.state.address}xxxx\n        xxxx{this.state.lat}xxxx\n        xxxx{this.state.lng}xxxx */}\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: \"Search Places ...\",\n                  className: \"location-search-input\"\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? \"suggestion-item--active\"\n                    : \"suggestion-item\";\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}