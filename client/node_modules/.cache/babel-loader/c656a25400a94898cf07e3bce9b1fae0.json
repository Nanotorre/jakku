{"ast":null,"code":"import _defineProperty from \"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/src/components/organisms/AllProductsAndSearch.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nexport default class AllProductsAndSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: props.products,\n      searchProducts: props.products\n    };\n  }\n\n  componentDidMount() {\n    this.router.getProducts().then(response => {\n      let bids = response.map(product => product.bid);\n      bids.forEach(bid => bid.productsList.map(id => response.filter(product => product._id === id)));\n      let bidsId = [];\n      bids = bids.filter(bid => {\n        if (bidsId.includes(bid._id)) {\n          return false;\n        } else {\n          bidsId.push(bid._id);\n          return true;\n        }\n      });\n      this.setState(_objectSpread({}, this.state, {\n        products: response,\n        bids: bids,\n        centerMap: this.props.centerMap\n      }));\n      console.log(this.state);\n    });\n  }\n\n  makeSearch(searchText) {\n    const searchProductsResults = this.state.products.filter(product => product.name.toLowerCase().includes(searchText.toLowerCase()));\n    this.setState(_objectSpread({}, this.state, {\n      searchProducts: searchProductsResults\n    }));\n  } // changeStock(stockCheckbox) {\n  //   this.setState({\n  //     ...this.state,\n  //     inStock: stockCheckbox\n  //   });\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-all-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      updateSearch: searchText => this.makeSearch(searchText) // updateInStock={stockCheckbox => this.changeStock(stockCheckbox)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Bidmapcontainer, {\n      bids: this.state.bids,\n      centerMap: this.props.centerMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(AllProducts, {\n      products: this.props.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/organisms/AllProductsAndSearch.jsx"],"names":["React","Component","AllProductsAndSearch","constructor","props","state","products","searchProducts","componentDidMount","router","getProducts","then","response","bids","map","product","bid","forEach","productsList","id","filter","_id","bidsId","includes","push","setState","centerMap","console","log","makeSearch","searchText","searchProductsResults","name","toLowerCase","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAC1DE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QADN;AAEVC,MAAAA,cAAc,EAAEH,KAAK,CAACE;AAFZ,KAAZ;AAKD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL,CAAYC,WAAZ,GAA0BC,IAA1B,CAA+BC,QAAQ,IAAI;AACzC,UAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACC,GAAhC,CAAX;AACAH,MAAAA,IAAI,CAACI,OAAL,CAAaD,GAAG,IACdA,GAAG,CAACE,YAAJ,CAAiBJ,GAAjB,CAAqBK,EAAE,IACrBP,QAAQ,CAACQ,MAAT,CAAgBL,OAAO,IAAIA,OAAO,CAACM,GAAR,KAAgBF,EAA3C,CADF,CADF;AAKA,UAAIG,MAAM,GAAG,EAAb;AACAT,MAAAA,IAAI,GAAGA,IAAI,CAACO,MAAL,CAAYJ,GAAG,IAAI;AACxB,YAAIM,MAAM,CAACC,QAAP,CAAgBP,GAAG,CAACK,GAApB,CAAJ,EAA8B;AAC5B,iBAAO,KAAP;AACD,SAFD,MAEO;AACLC,UAAAA,MAAM,CAACE,IAAP,CAAYR,GAAG,CAACK,GAAhB;AACA,iBAAO,IAAP;AACD;AACF,OAPM,CAAP;AAQA,WAAKI,QAAL,mBACK,KAAKpB,KADV;AAEEC,QAAAA,QAAQ,EAAEM,QAFZ;AAGEC,QAAAA,IAAI,EAAEA,IAHR;AAIEa,QAAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWsB;AAJxB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACD,KAvBD;AAwBD;;AAEDwB,EAAAA,UAAU,CAACC,UAAD,EAAa;AACrB,UAAMC,qBAAqB,GAAG,KAAK1B,KAAL,CAAWC,QAAX,CAAoBc,MAApB,CAA2BL,OAAO,IAC9DA,OAAO,CAACiB,IAAR,CAAaC,WAAb,GAA2BV,QAA3B,CAAoCO,UAAU,CAACG,WAAX,EAApC,CAD4B,CAA9B;AAIA,SAAKR,QAAL,mBACK,KAAKpB,KADV;AAEEE,MAAAA,cAAc,EAAEwB;AAFlB;AAID,GA7CyD,CA+C1D;AACA;AACA;AACA;AACA;AACA;;;AACAG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,SAAD;AACE,MAAA,YAAY,EAAEJ,UAAU,IAAI,KAAKD,UAAL,CAAgBC,UAAhB,CAD9B,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,EAKU,oBAAC,eAAD;AACE,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWQ,IADnB;AAEE,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWsB,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALV,EASU,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATV,CADF;AAaD;;AAnEyD","sourcesContent":["import React, { Component } from 'react'\n\nexport default class AllProductsAndSearch extends Component {\n  constructor(props) {\n    super(props)\n    this.state= {\n      products: props.products,\n      searchProducts: props.products,\n      \n    }\n  }\n  componentDidMount() {\n    this.router.getProducts().then(response => {\n      let bids = response.map(product => product.bid);\n      bids.forEach(bid =>\n        bid.productsList.map(id =>\n          response.filter(product => product._id === id)\n        )\n      );\n      let bidsId = [];\n      bids = bids.filter(bid => {\n        if (bidsId.includes(bid._id)) {\n          return false;\n        } else {\n          bidsId.push(bid._id);\n          return true;\n        }\n      });\n      this.setState({\n        ...this.state,\n        products: response,\n        bids: bids,\n        centerMap: this.props.centerMap\n      });\n      console.log(this.state);\n    });\n  }\n\n  makeSearch(searchText) {\n    const searchProductsResults = this.state.products.filter(product =>\n      product.name.toLowerCase().includes(searchText.toLowerCase())\n    );\n\n    this.setState({\n      ...this.state,\n      searchProducts: searchProductsResults\n    });\n  }\n\n  // changeStock(stockCheckbox) {\n  //   this.setState({\n  //     ...this.state,\n  //     inStock: stockCheckbox\n  //   });\n  // }\n  render() {\n    return (\n      <div className=\"container-all-search\">\n                <SearchBar\n                  updateSearch={searchText => this.makeSearch(searchText)}\n                  // updateInStock={stockCheckbox => this.changeStock(stockCheckbox)}\n                />\n                <Bidmapcontainer\n                  bids={this.state.bids}\n                  centerMap={this.props.centerMap}\n                ></Bidmapcontainer>\n                <AllProducts products={this.props.products}></AllProducts>\n              </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}