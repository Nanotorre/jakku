{"ast":null,"code":"import _defineProperty from \"/Users/fer/ironhack/week_8/jakku/client/gang/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/gang/src/components/atoms/LocationSearchInput.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => {\n        getLatLng(results[0]).then(googleLatLng => {\n          let xxx1 = googleLatLng;\n          let direccion = results[0].formatted_address;\n          this.setState(_objectSpread({}, this.state, {\n            address: {\n              city: direccion,\n              latlng: xxx1\n            }\n          }));\n        });\n      }) // .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error(\"Error\", error));\n    };\n\n    this.state = {\n      address: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"xxxx\", this.state.address.toString(), \"xxxx\", React.createElement(PlacesAutocomplete, {\n      value: this.state.address.city,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: \"Search Places ...\",\n      className: \"location-search-input\"\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, suggestion.description));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/gang/src/components/atoms/LocationSearchInput.jsx"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","Component","constructor","props","handleChange","address","setState","handleSelect","then","results","googleLatLng","xxx1","direccion","formatted_address","state","city","latlng","catch","error","console","render","toString","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAKA,eAAe,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJC,OAAO,IAAI;AACxB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAPkB;;AAAA,SASnBE,YATmB,GASJF,OAAO,IAAI;AACxBP,MAAAA,gBAAgB,CAACO,OAAD,CAAhB,CACGG,IADH,CACQC,OAAO,IAAI;AACfV,QAAAA,SAAS,CAACU,OAAO,CAAC,CAAD,CAAR,CAAT,CAAsBD,IAAtB,CAA2BE,YAAY,IAAI;AACzC,cAAIC,IAAI,GAAGD,YAAX;AACA,cAAIE,SAAS,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAWI,iBAA3B;AACA,eAAKP,QAAL,mBACK,KAAKQ,KADV;AAEET,YAAAA,OAAO,EAAE;AACPU,cAAAA,IAAI,EAAEH,SADC;AAEPI,cAAAA,MAAM,EAAEL;AAFD;AAFX;AAOD,SAVD;AAWD,OAbH,EAcE;AAdF,OAeGM,KAfH,CAeSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAflB;AAgBD,KA1BkB;;AAEjB,SAAKJ,KAAL,GAAa;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAyBDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAKN,KAAL,CAAWT,OAAX,CAAmBgB,QAAnB,EADP,UAEE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWT,OAAX,CAAmBU,IAD5B;AAEE,MAAA,QAAQ,EAAE,KAAKX,YAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKG,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAAC;AACAe,MAAAA,aADA;AAEAC,MAAAA,WAFA;AAGAC,MAAAA,sBAHA;AAIAC,MAAAA;AAJA,KAAD,KAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CACMH,aAAa,CAAC;AAChBI,MAAAA,WAAW,EAAE,mBADG;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAOE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGF,WAAW,CAACK,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,YAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD6B,CAI7B;;AACA,YAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACV;AAAEE,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADU,GAEV;AAAED,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAFJ;AAGA,aACE,6CACMT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,QAAAA,SADqC;AAErCI,QAAAA;AAFqC,OAAb,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,UAAU,CAACK,WAAlB,CANF,CADF;AAUD,KAlBA,CAFH,CAPF,CAXJ,CAFF,CADF;AAgDD;;AA9E8D","sourcesContent":["import React from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: {} };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => {\n        getLatLng(results[0]).then(googleLatLng => {\n          let xxx1 = googleLatLng\n          let direccion = results[0].formatted_address;\n          this.setState({\n            ...this.state,\n            address: {\n              city: direccion,\n              latlng: xxx1\n            }\n          });\n        });\n      })\n      // .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <div>\n        xxxx{this.state.address.toString()}xxxx\n        <PlacesAutocomplete\n          value={this.state.address.city}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: \"Search Places ...\",\n                  className: \"location-search-input\"\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? \"suggestion-item--active\"\n                    : \"suggestion-item\";\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}