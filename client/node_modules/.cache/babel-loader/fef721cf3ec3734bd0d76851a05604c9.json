{"ast":null,"code":"import _classCallCheck from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from\"axios\";var RoutesService=function RoutesService(){var _this=this;_classCallCheck(this,RoutesService);this.errHandler=function(err){// console.error(err);\nif(err.response&&err.response.data){// console.error(\"API response\", err.response.data);\nthrow err.response.data.message;}throw err;};this.createBid=function(state){return _this.service.post(\"/create/new-bid\",{state:state}).then(function(response){return response.data;}).catch(_this.errHandler);};this.createProduct=function(state){return _this.service.post(\"/create/new-product\",{state:state}).then(function(response){return response.data;}).catch(_this.errHandler);};this.addPicture=function(file){var formData=new FormData();formData.append(\"photo\",file);return _this.service.post('/create/new-product/photo',formData,{headers:{'Content-Type':'multipart/form-data'}}).then(function(res){return res.data;}).catch(_this.errHandler);};this.getProduct=function(id){return _this.service.get(\"display/product-info/\".concat(id)).then(function(response){return response.data;}).catch(_this.errHandler);};this.buyProduct=function(id){return _this.service.put(\"/edit/buy-product/\".concat(id)).then(function(response){return response.data;}).catch(_this.errHandler);};this.getProducts=function(){return _this.service.get(\"display/all-products\").then(function(response){return response.data;}).catch(_this.errHandler);};this.start=function(){return _this.service.get(\"display/start\").then(function(response){return response.data;}).catch(_this.errHandler);};this.getMyBids=function(){return _this.service.get(\"display/bid-fromuser\").then(function(response){return response.data;}).catch(_this.errHandler);};this.service=axios.create({baseURL:\"http://localhost:3010/\",withCredentials:true});};export default RoutesService;","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/RoutesService.js"],"names":["axios","RoutesService","errHandler","err","response","data","message","createBid","state","service","post","then","catch","createProduct","addPicture","file","formData","FormData","append","headers","res","getProduct","id","get","buyProduct","put","getProducts","start","getMyBids","create","baseURL","withCredentials"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,a,CACJ,wBAAc,yDAMdC,UANc,CAMD,SAAAC,GAAG,CAAI,CAClB;AACA,GAAIA,GAAG,CAACC,QAAJ,EAAgBD,GAAG,CAACC,QAAJ,CAAaC,IAAjC,CAAuC,CACrC;AACA,KAAMF,CAAAA,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,OAAxB,CACD,CACD,KAAMH,CAAAA,GAAN,CACD,CAba,MAedI,SAfc,CAeF,SAACC,KAAD,CAAW,CACrB,MAAO,CAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,iBAAlB,CAAqC,CAACF,KAAK,CAALA,KAAD,CAArC,EACNG,IADM,CACD,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADP,EAENO,KAFM,CAEA,KAAI,CAACV,UAFL,CAAP,CAID,CApBa,MAqBdW,aArBc,CAqBE,SAACL,KAAD,CAAW,CACzB,MAAO,CAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,qBAAlB,CAAyC,CAACF,KAAK,CAALA,KAAD,CAAzC,EACNG,IADM,CACD,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADP,EAENO,KAFM,CAEA,KAAI,CAACV,UAFL,CAAP,CAGD,CAzBa,MA0BdY,UA1Bc,CA0BD,SAACC,IAAD,CAAU,CACrB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAyBH,IAAzB,EACA,MAAO,CAAA,KAAI,CAACN,OAAL,CACJC,IADI,CACC,2BADD,CAC8BM,QAD9B,CACwC,CAC3CG,OAAO,CAAE,CACP,eAAgB,qBADT,CADkC,CADxC,EAMJR,IANI,CAMC,SAAAS,GAAG,QAAIA,CAAAA,GAAG,CAACf,IAAR,EANJ,EAOJO,KAPI,CAOE,KAAI,CAACV,UAPP,CAAP,CAQD,CArCa,MAsCdmB,UAtCc,CAsCD,SAACC,EAAD,CAAQ,CACnB,MAAO,CAAA,KAAI,CAACb,OAAL,CAAac,GAAb,gCAAyCD,EAAzC,GACNX,IADM,CACD,SAAAP,QAAQ,QACbA,CAAAA,QAAQ,CAACC,IADI,EADP,EAGNO,KAHM,CAGA,KAAI,CAACV,UAHL,CAAP,CAID,CA3Ca,MA4CdsB,UA5Cc,CA4CD,SAACF,EAAD,CAAQ,CACnB,MAAO,CAAA,KAAI,CAACb,OAAL,CAAagB,GAAb,6BAAsCH,EAAtC,GACNX,IADM,CACD,SAAAP,QAAQ,QACZA,CAAAA,QAAQ,CAACC,IADG,EADP,EAGNO,KAHM,CAGA,KAAI,CAACV,UAHL,CAAP,CAID,CAjDa,MAkDdwB,WAlDc,CAkDD,UAAM,CACjB,MAAO,CAAA,KAAI,CAACjB,OAAL,CAAac,GAAb,CAAiB,sBAAjB,EACNZ,IADM,CACD,SAAAP,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAZ,EADP,EAENO,KAFM,CAEA,KAAI,CAACV,UAFL,CAAP,CAGD,CAtDa,MAuDdyB,KAvDc,CAuDP,UAAM,CACX,MAAO,CAAA,KAAI,CAAClB,OAAL,CAAac,GAAb,CAAiB,eAAjB,EACNZ,IADM,CACD,SAAAP,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAZ,EADP,EAENO,KAFM,CAEA,KAAI,CAACV,UAFL,CAAP,CAGD,CA3Da,MA4Dd0B,SA5Dc,CA4DH,UAAM,CACf,MAAO,CAAA,KAAI,CAACnB,OAAL,CAAac,GAAb,CAAiB,sBAAjB,EACNZ,IADM,CACD,SAAAP,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAZ,EADP,EAENO,KAFM,CAEA,KAAI,CAACV,UAFL,CAAP,CAGD,CAhEa,CACZ,KAAKO,OAAL,CAAeT,KAAK,CAAC6B,MAAN,CAAa,CAC1BC,OAAO,CAAE,wBADiB,CAE1BC,eAAe,CAAE,IAFS,CAAb,CAAf,CAID,C,CAkEH,cAAe9B,CAAAA,aAAf","sourcesContent":["import axios from \"axios\";\n\nclass RoutesService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:3010/\",\n      withCredentials: true\n    })\n  }\n  errHandler = err => {\n    // console.error(err);\n    if (err.response && err.response.data) {\n      // console.error(\"API response\", err.response.data);\n      throw err.response.data.message\n    }\n    throw err;\n  }\n\n  createBid = (state) => {\n    return this.service.post(\"/create/new-bid\", {state})\n    .then(response => response.data)\n    .catch(this.errHandler)\n  \n  }\n  createProduct = (state) => {\n    return this.service.post(\"/create/new-product\", {state})\n    .then(response => response.data)\n    .catch(this.errHandler)\n  }\n  addPicture = (file) => {\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    return this.service\n      .post('/create/new-product/photo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(res => res.data)\n      .catch(this.errHandler);\n  }\n  getProduct = (id) => {\n    return this.service.get(`display/product-info/${id}`)\n    .then(response=> \n     response.data)\n    .catch(this.errHandler)\n  }\n  buyProduct = (id) => {\n    return this.service.put(`/edit/buy-product/${id}`)\n    .then(response=>\n      response.data)\n    .catch(this.errHandler)\n  }\n  getProducts= () => {\n    return this.service.get(\"display/all-products\")\n    .then(response=> response.data)\n    .catch(this.errHandler)\n  }\n  start= () => {\n    return this.service.get(\"display/start\")\n    .then(response=> response.data)\n    .catch(this.errHandler)\n  }\n  getMyBids= () => {\n    return this.service.get(\"display/bid-fromuser\")\n    .then(response=> response.data)\n    .catch(this.errHandler)\n  }\n  \n\n\n\n}\n\nexport default RoutesService;"]},"metadata":{},"sourceType":"module"}