{"ast":null,"code":"import _defineProperty from \"/Users/fer/ironhack/week_8/jakku/client/gang/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/gang/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport AuthService from \"./components/auth/Authservice\";\nimport Home from \"./components/pages/Home\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\"; // import CreateBidForm from \"./components/organisms/CreateBidForm\";\n\nimport CreateBid from \"./components/organisms/CreateBid\";\nimport CreateProduct from \"./components/organisms/CreateProduct\";\nimport ShowBid from \"./components/pages/ShowBid\";\nexport default class App extends Component {\n  constructor(props) {\n    super();\n\n    this.getUser = userObj => {\n      this.setState({\n        loggedInUser: userObj\n      });\n    };\n\n    this.logout = () => {\n      this.service.logout().then(() => {\n        this.setState({\n          loggedInUser: null\n        });\n      });\n    };\n\n    this.fetchUser = () => {\n      return this.service.loggedin().then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n        console.log(\"fetch/////\", response);\n      }).catch(error => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n    };\n\n    this.state = {\n      loggedInUser: null,\n      bid: null\n    };\n    this.service = new AuthService();\n    this.fetchUser();\n  }\n\n  changeStateBid(newValue) {\n    const from = newValue.from,\n          to = newValue.to,\n          deadLine = newValue.deadLine;\n    this.setState(_objectSpread({}, this.state, {\n      bid: {\n        from: from,\n        to: to,\n        deadLine: deadLine\n      },\n      nobid: \"xxxxxxxx\"\n    }));\n    this.fetchUser();\n    console.log(newValue);\n    console.log(\"bid actualizada\", this.state);\n  }\n\n  render() {\n    return this.state.loggedInUser ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create-bid\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(CreateBid, {\n          fromApp: newValue => this.changeStateBid(newValue),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"//                   \", React.createElement(Login, {\n      getUser: this.getUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"//                   \", React.createElement(Signup, {\n      getUser: this.getUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"//                   \", React.createElement(GoogleAuth, {\n      getUser: this.getUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"//                   \", React.createElement(\"a\", {\n      href: \"http://localhost:3010/auth/google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"//                     Sign In with Google //                   \"), \"//                   \", React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))));\n  } //   return (\n  //     <div>\n  //       <Switch>\n  //         <Route\n  //           exact\n  //           path=\"/\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <Home></Home>\n  //                 <Home></Home>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-bid\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 {/* <CreateBidForm></CreateBidForm> */}\n  //                 <CreateBid fromApp={newValue=>this.changeStateBid(newValue)}></CreateBid>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-product\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <CreateProduct></CreateProduct>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/your-bid\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <ShowBid></ShowBid>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <Login getUser={this.getUser}></Login>\n  //                   <Signup getUser={this.getUser}></Signup>\n  //                   <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                   <a href=\"http://localhost:3010/auth/google\">\n  //                     Sign In with Google\n  //                   </a>\n  //                   <Button variant=\"contained\" color=\"primary\"></Button>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/login\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <Redirect to=\"/home\" />\n  //                   <h1>Wellcome home</h1>\n  //                   <button onClick={this.logout}>Logout</button>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <div className=\"App\">\n  //                     <Login getUser={this.getUser}></Login>\n  //                     <Signup getUser={this.getUser}></Signup>\n  //                     <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                     <a href=\"http://localhost:3010/auth/google\">\n  //                       Sign In with Google\n  //                     </a>\n  //                     <Button variant=\"contained\" color=\"primary\">\n  //                       Hello World\n  //                     </Button>\n  //                   </div>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //       </Switch>\n  //     </div>\n  //   );\n  //   // if(this.state.loggedInUser) {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <Redirect to=\"/home\"/>\n  //   //     <h1>Wellcome home</h1>\n  //   //     <button onClick={this.logout}>Logout</button>\n  //   //   </React.Fragment>\n  //   //   )\n  //   // }\n  //   // else {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <div className=\"App\">\n  //   //       <Login getUser={this.getUser}></Login>\n  //   //       <Signup getUser={this.getUser}></Signup>\n  //   //       <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //   //       <a href=\"http://localhost:3010/auth/google\">Sign In with Google</a>\n  //   //       <Button variant=\"contained\" color=\"primary\">\n  //   //   Hello World\n  //   // </Button>\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   //     )\n  //   // }\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/gang/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Login","Signup","GoogleAuth","AuthService","Home","Button","CssBaseline","CreateBid","CreateProduct","ShowBid","App","constructor","props","getUser","userObj","setState","loggedInUser","logout","service","then","fetchUser","loggedin","response","console","log","catch","error","state","bid","changeStateBid","newValue","from","to","deadLine","nobid","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\n\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport AuthService from \"./components/auth/Authservice\";\n\nimport Home from \"./components/pages/Home\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import CreateBidForm from \"./components/organisms/CreateBidForm\";\nimport CreateBid from \"./components/organisms/CreateBid\";\nimport CreateProduct from \"./components/organisms/CreateProduct\";\nimport ShowBid from \"./components/pages/ShowBid\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loggedInUser: null,\n      bid: null\n    };\n    this.service = new AuthService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({\n        loggedInUser: null\n      });\n    });\n  };\n\n  fetchUser = () => {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n        console.log(\"fetch/////\", response)\n      })\n      .catch(error => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  };\n  changeStateBid(newValue) {\n    const {from, to, deadLine} = newValue;\n    this.setState({\n      ...this.state,\n      bid: {\n        from: from,\n        to: to,\n        deadLine: deadLine\n      },\n      nobid: \"xxxxxxxx\"\n    });\n    this.fetchUser();\n    console.log(newValue);\n    console.log(\"bid actualizada\", this.state)\n  }\n\n  render() {\n    return this.state.loggedInUser?\n       (\n      <React.Fragment>\n      <Switch>\n      <Route></Route>\n      <Route></Route>\n      </Switch>\n      </React.Fragment>\n      )\n    \n    : \n     (\n        <React.Fragment>\n      <Switch>\n      <Route\n                exact\n                path=\"/\"\n                render={() => {\n                  return (\n                    <React.Fragment>\n                      <Home></Home>\n                      <Home></Home>\n                    </React.Fragment>\n                  );\n                }}\n              />\n      <Route\n            exact\n            path=\"/create-bid\"\n            render={() => {\n              \n              return (\n                <React.Fragment>\n                  {/* <CreateBidForm></CreateBidForm> */}\n                  <CreateBid fromApp={newValue=>this.changeStateBid(newValue)}></CreateBid>\n                </React.Fragment>\n              );\n            }}\n          />\n     <React.Fragment>\n  //                   <Login getUser={this.getUser}></Login>\n  //                   <Signup getUser={this.getUser}></Signup>\n  //                   <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                   <a href=\"http://localhost:3010/auth/google\">\n  //                     Sign In with Google\n  //                   </a>\n  //                   <Button variant=\"contained\" color=\"primary\"></Button>\n                 </React.Fragment>\n      </Switch>\n      </React.Fragment>\n      )\n    \n  }\n\n\n\n\n\n\n\n\n  //   return (\n\n\n\n\n\n\n\n\n\n\n  //     <div>\n  //       <Switch>\n  //         <Route\n  //           exact\n  //           path=\"/\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <Home></Home>\n  //                 <Home></Home>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-bid\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 {/* <CreateBidForm></CreateBidForm> */}\n  //                 <CreateBid fromApp={newValue=>this.changeStateBid(newValue)}></CreateBid>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/create-product\"\n  //           render={() => {\n  //             return (\n  //               <React.Fragment>\n  //                 <CreateProduct></CreateProduct>\n  //               </React.Fragment>\n  //             );\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/your-bid\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <ShowBid></ShowBid>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <Login getUser={this.getUser}></Login>\n  //                   <Signup getUser={this.getUser}></Signup>\n  //                   <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                   <a href=\"http://localhost:3010/auth/google\">\n  //                     Sign In with Google\n  //                   </a>\n  //                   <Button variant=\"contained\" color=\"primary\"></Button>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //         <Route\n  //           exact\n  //           path=\"/login\"\n  //           render={() => {\n  //             if (this.state.loggedInUser) {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <Redirect to=\"/home\" />\n  //                   <h1>Wellcome home</h1>\n  //                   <button onClick={this.logout}>Logout</button>\n  //                 </React.Fragment>\n  //               );\n  //             } else {\n  //               return (\n  //                 <React.Fragment>\n  //                   <CssBaseline />\n  //                   <div className=\"App\">\n  //                     <Login getUser={this.getUser}></Login>\n  //                     <Signup getUser={this.getUser}></Signup>\n  //                     <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //                     <a href=\"http://localhost:3010/auth/google\">\n  //                       Sign In with Google\n  //                     </a>\n  //                     <Button variant=\"contained\" color=\"primary\">\n  //                       Hello World\n  //                     </Button>\n  //                   </div>\n  //                 </React.Fragment>\n  //               );\n  //             }\n  //           }}\n  //         />\n  //       </Switch>\n  //     </div>\n  //   );\n\n  //   // if(this.state.loggedInUser) {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <Redirect to=\"/home\"/>\n  //   //     <h1>Wellcome home</h1>\n  //   //     <button onClick={this.logout}>Logout</button>\n  //   //   </React.Fragment>\n  //   //   )\n  //   // }\n  //   // else {\n  //   //   return (\n  //   //     <React.Fragment>\n  //   //       <CssBaseline />\n  //   //     <div className=\"App\">\n  //   //       <Login getUser={this.getUser}></Login>\n  //   //       <Signup getUser={this.getUser}></Signup>\n  //   //       <GoogleAuth getUser={this.getUser}></GoogleAuth>\n  //   //       <a href=\"http://localhost:3010/auth/google\">Sign In with Google</a>\n  //   //       <Button variant=\"contained\" color=\"primary\">\n  //   //   Hello World\n  //   // </Button>\n\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   //     )\n\n  //   // }\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}