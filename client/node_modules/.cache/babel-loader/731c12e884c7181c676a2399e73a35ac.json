{"ast":null,"code":"var _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/src/components/auth/Login.jsx\";\nimport React, { Component } from 'react';\nimport AuthService from \"./Authservice\";\nimport { Button, TextInput } from \"react-materialize\";\nimport { withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendLogin = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      debugger;\n      this.service.login(username, password).then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n        this.props.getUser(response);\n        consoel;\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      logged: false\n    };\n    this.service = new AuthService();\n  }\n\n  changeState(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    if (!this.state.logged) {\n      return React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"form\", {\n        onSubmit: this.sendLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        label: \"Nombre\",\n        value: this.state.username,\n        name: \"username\",\n        onChange: e => this.changeState(e),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(TextInput, {\n        label: \"Contrase\\xF1a\",\n        value: this.state.password,\n        name: \"password\",\n        onChange: e => this.changeState(e),\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        value: \"Log in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.error ? \"Login failed. Please, try again o signup.\" : \"\"));\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/auth/Login.jsx"],"names":["React","Component","AuthService","Button","TextInput","withRouter","Login","constructor","props","sendLogin","event","preventDefault","state","username","password","service","login","then","response","setState","error","getUser","consoel","history","push","catch","logged","changeState","e","target","name","value","render","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthService from \"./Authservice\";\nimport { Button, TextInput } from \"react-materialize\";\nimport { withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username : \"\",\n      password : \"\",\n      logged: false,\n    }\n    this.service = new AuthService();\n  }\n  changeState(e) {\n    const {name, value} = e.target;\n    this.setState({\n      [name] : value\n    });\n  }\n\n  sendLogin = (event) => {\n    event.preventDefault();\n    const {username, password} = this.state;\n    debugger\n    this.service.login(username, password)\n    .then(response => {\n      this.setState({\n        username : username,\n        password : password,\n        error : false\n      });\n      \n      this.props.getUser(response);\n      consoel\n      this.props.history.push('/');\n      \n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n  render() {\n    if(!this.state.logged){\n      return (\n      \n        <div className=\"login-container\">\n          <p>Login</p>\n          <form onSubmit={this.sendLogin}>\n          <TextInput label=\"Nombre\" value={this.state.username}   name=\"username\" onChange={e=>this.changeState(e)} type=\"text\"></TextInput>\n          <TextInput label=\"ContraseÃ±a\" value={this.state.password} name=\"password\" onChange={e=>this.changeState(e)} type=\"password\"></TextInput>\n          <Button type=\"submit\" value=\"Log in\">Login</Button>\n          </form>\n          <p>{this.state.error? \"Login failed. Please, try again o signup.\" : \"\"}</p>\n        </div>\n      )\n    }\n    else {\n      this.props.history.goBack();\n    }\n  \n    \n  }\n}\n\nexport default withRouter(Login)"]},"metadata":{},"sourceType":"module"}