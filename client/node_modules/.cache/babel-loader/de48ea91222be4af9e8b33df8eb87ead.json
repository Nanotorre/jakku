{"ast":null,"code":"var _jsxFileName = \"/Users/fer/ironhack/week_8/jakku/client/src/components/atoms/Bidmarker.jsx\";\nimport React from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport CardMap from \"../organisms/CardMap\";\nimport Box from \"../../img/boxMapIcon.png\";\nexport default class Bidmarker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleOpen = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      activeMarker: this.props.activeMarker\n    };\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: Box,\n      onClick: this.toggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      onClick: this.toggleOpen,\n      position: this.props.location,\n      icon: StethoscopeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.isOpen && this.state.activeMarker ? React.createElement(InfoWindow, {\n      maxWidth: 800,\n      defaultPosition: this.props.location,\n      onCloseClick: this.props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(DoctorMapCard, {\n      toggleShowPage: this.props.toggleShowPage,\n      dr: this.props.doctor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/atoms/Bidmarker.jsx"],"names":["React","Marker","InfoWindow","CardMap","Box","Bidmarker","Component","constructor","props","toggleOpen","setState","isOpen","state","activeMarker","render","location","StethoscopeIcon","onToggleOpen","toggleShowPage","doctor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAIA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,eAAe,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQN,MAAM;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAArB,OAAd;AAED,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,KADG;AAEXE,MAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK;AAFd,KAAb;AAID;;AAODC,EAAAA,MAAM,GAAE;AACN,WACI,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QADvB;AAEE,MAAA,IAAI,EAAEX,GAFR;AAGE,MAAA,OAAO,EAAE,KAAKK,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQD;;AAEDK,EAAAA,MAAM,GAAE;AACN,WAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKL,UAAtB;AACE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWO,QADvB;AAEE,MAAA,IAAI,EAAEC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,KAAKJ,KAAL,CAAWD,MAAX,IAAqB,KAAKC,KAAL,CAAWC,YAAhC,GACA,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,GAAtB;AAA2B,MAAA,eAAe,EAAG,KAAKL,KAAL,CAAWO,QAAxD;AAAmE,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWS,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,cAAc,EAAE,KAAKT,KAAL,CAAWU,cAA1C;AAA0D,MAAA,EAAE,EAAE,KAAKV,KAAL,CAAWW,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,GAGgB,IAPlB,CAFJ;AAeD;;AAzCoD","sourcesContent":["import React from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport CardMap from \"../organisms/CardMap\";\n\n\n\nimport Box from \"../../img/boxMapIcon.png\"\n\nexport default class Bidmarker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n      activeMarker: this.props.activeMarker\n    }\n  }\n\n  toggleOpen = () => {\n    this.setState({isOpen: !this.state.isOpen}\n    )\n  }\n\n  render(){\n    return(\n        <Marker\n          position={this.props.location}\n          icon={Box}\n          onClick={this.toggleOpen}\n        >\n        </Marker>\n    );\n  }\n\n  render(){\n    return(\n\n        <Marker onClick={this.toggleOpen}\n          position={this.props.location}\n          icon={StethoscopeIcon}\n        >\n        { this.state.isOpen && this.state.activeMarker ?\n          <InfoWindow maxWidth={800} defaultPosition={ this.props.location } onCloseClick={this.props.onToggleOpen}>\n            <DoctorMapCard toggleShowPage={this.props.toggleShowPage} dr={this.props.doctor}/>\n          </InfoWindow> : null\n        }\n        </Marker>\n    \n    )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}