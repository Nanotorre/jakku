{"ast":null,"code":"import _defineProperty from\"/Users/fer/ironhack/week_8/jakku/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import{withScriptjs,withGoogleMap,GoogleMap}from\"react-google-maps\";import Bidmarker from\"../atoms/Bidmarker\";var Productmap=withScriptjs(withGoogleMap(function(props){var active;var zoom=12;if(props.zoomMap){zoom=props.zoomMap;}var markers=props.products.map(function(product,idx){var _React$createElement;return React.createElement(Bidmarker,(_React$createElement={product:product,key:idx,id:product._id,closeMarkers:props.closeOtherMarkers,location:{lat:product.bid.location.coordinates[1],lng:product.bid.location.coordinates[0]},toggleShowPage:props.toggleShowPage},_defineProperty(_React$createElement,\"closeMarkers\",props.closeOtherMarkers),_defineProperty(_React$createElement,\"activeMarker\",product._id===props.activeMarker?true:false),_React$createElement));});return React.createElement(GoogleMap,{defaultZoom:zoom,center:{lat:props.centerMap.lat,lng:props.centerMap.lng}// center={ center }\n},markers);}));export default Productmap;","map":{"version":3,"sources":["/Users/fer/ironhack/week_8/jakku/client/src/components/molecules/Productmap.jsx"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Bidmarker","Productmap","props","active","zoom","zoomMap","markers","products","map","product","idx","_id","closeOtherMarkers","lat","bid","location","coordinates","lng","toggleShowPage","activeMarker","centerMap"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,aAAvB,CAAsCC,SAAtC,KAAuD,mBAAvD,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CAIA,GAAMC,CAAAA,UAAU,CAAGJ,YAAY,CAACC,aAAa,CAAC,SAACI,KAAD,CAAU,CACtD,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,IAAI,CAAE,EAAV,CACA,GAAGF,KAAK,CAACG,OAAT,CAAkB,CAChBD,IAAI,CAACF,KAAK,CAACG,OAAX,CACD,CAED,GAAIC,CAAAA,OAAO,CAAGJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAoB,SAACC,OAAD,CAAUC,GAAV,iCAAkB,qBAAC,SAAD,wBAClC,OAAO,CAAED,OADyB,CAElC,GAAG,CAAEC,GAF6B,CAGlC,EAAE,CAAED,OAAO,CAACE,GAHsB,CAIlC,YAAY,CAAET,KAAK,CAACU,iBAJc,CAKlC,QAAQ,CAAE,CAACC,GAAG,CAACJ,OAAO,CAACK,GAAR,CAAYC,QAAZ,CAAqBC,WAArB,CAAiC,CAAjC,CAAL,CAA0CC,GAAG,CAAER,OAAO,CAACK,GAAR,CAAYC,QAAZ,CAAqBC,WAArB,CAAiC,CAAjC,CAA/C,CALwB,CAMlC,cAAc,CAAEd,KAAK,CAACgB,cANY,sDAOpBhB,KAAK,CAACU,iBAPc,sDAQnBH,OAAO,CAACE,GAAR,GAAgBT,KAAK,CAACiB,YAAtB,CAAqC,IAArC,CAA4C,KARzB,wBAAlB,EAApB,CAAd,CAUA,MAEI,qBAAC,SAAD,EACE,WAAW,CAAEf,IADf,CAEE,MAAM,CAAG,CAAES,GAAG,CAAGX,KAAK,CAACkB,SAAN,CAAgBP,GAAxB,CAA8BI,GAAG,CAAEf,KAAK,CAACkB,SAAN,CAAgBH,GAAnD,CACT;AAHF,EAKKX,OALL,CAFJ,CAUC,CA3B0C,CAAd,CAA/B,CA8BA,cAAeL,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport Bidmarker from \"../atoms/Bidmarker\";\n\n\n\nconst Productmap = withScriptjs(withGoogleMap((props) =>{\n  let active;\n  let zoom= 12;\n  if(props.zoomMap) {\n    zoom=props.zoomMap\n  }\n\n  let markers = props.products.map( (product, idx) => <Bidmarker\n                    product={product}\n                    key={idx}\n                    id={product._id}\n                    closeMarkers={props.closeOtherMarkers}\n                    location={{lat:product.bid.location.coordinates[1], lng: product.bid.location.coordinates[0]}}\n                    toggleShowPage={props.toggleShowPage}\n                    closeMarkers={props.closeOtherMarkers}\n                    activeMarker={ product._id === props.activeMarker ? true : false}\n                  />);          \n  return (\n\n      <GoogleMap\n        defaultZoom={zoom}\n        center={ { lat:  props.centerMap.lat , lng: props.centerMap.lng } }\n        // center={ center }\n        >\n          {markers}\n      </GoogleMap>\n    );\n  }\n))\n\nexport default Productmap;"]},"metadata":{},"sourceType":"module"}